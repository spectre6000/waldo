var wheresWaldo = (function() {

  //DOM declaration
    // $puzzle = document.getElementById('.waldoImage');

  //House vars
    var DELAY = 275;
    var clicks = 0;
    var timer = null;
    var slide = '-120';
    var lastX;
    var lastY;

  //Setup
    var initialize = function(){
      clicked();
      characterSelect();
    }

    //Click handler
      var clicked = function(){
        
        
        $('.waldoImage').on('click', function(e){
          //count clicks
          clicks++;

          if(clicks === 1) {
            timer = setTimeout(function() {
              //perform single-click action
              single(e);
              //after action performed, reset counter
              clicks = 0;
            }, DELAY);
          } else {
            //prevent single-click action
            clearTimeout(timer);
            //perform double-click action
            double(e);
            //after action performed, reset counter
            clicks = 0;
          }
        })

        .on("dblclick", function(e){
          //cancel system double-click event
          e.preventDefault();
        });
      };

    //Double click handler
      var double = function(e){
        zoom(e);
        reposition(e);
      }

      //Resize image
        var zoom = function(e){
          $('.waldoImage').toggleClass("fitted");
        }

      //Reposition image to click position
        var reposition = function(e) {
          var posY;
          var posX;
          if ( $('.waldoImage').hasClass("fitted") ) {
            posY = (e.pageY * 2).toFixed(4);
            posX = (e.pageX * 2).toFixed(4);
            window.scrollTo( posX , posY );
          } else {
            posY = (e.pageY).toFixed(4);
            posX = (e.pageX).toFixed(4);
            window.scrollTo( posX , posY );
          }
        }

    //Single click handler
      var single = function(e) {
        recorder(e);
        selector();
      }

        //Hide/reveal character selector
          var selector = function(){
            slide === '0' ? slide = '-120' : slide = '0' ;
            $(".sidebar").animate({left: slide + 'px'}, 50);
          }

        //Assign X/Y
          var recorder = function(e) {
            if ( $('.waldoImage').hasClass("fitted") ) {
              //Fitted
              lastX = (e.pageX * 2/$('.waldoImage').attr('width')).toFixed(4);
              lastY = (e.pageY * 2/$('.waldoImage').attr('height')).toFixed(4);
              //For finding character coordinates to seed
              console.log('X: ' + lastX + ', Y: ' + lastY);
            } else {
              //Not fitted
              lastX = (e.pageX/$('.waldoImage').attr('width')).toFixed(4);
              lastY = (e.pageY/$('.waldoImage').attr('height')).toFixed(4);
              //For finding character coordinates to seed
              console.log('X: ' + lastX + ', Y: ' + lastY);
            }
          }

    //Character button handler
      var characterSelect = function(){
        $('button').on('click', function(){
          var character = $(this).attr('data-char');
          verifyCharacter(lastX, lastY, character);
        })
      }

      //AJAX call to database to verify character presence
        var verifyCharacter = function(lastX, lastY, character) {
          $.ajax({
              url: '/verify_character',
              type: "GET",
              data: {id: $('.waldoImage').attr('id'), character: character, x: lastX, y: lastY},
              dataType: "json",
              success: function(result) {
                result ? found(character) : failed(character);
              },
              error: function(result) {
                console.log("Something went awry...");
              }
            });
        }

        //When character is successfully located
        var found = function(character) {
          //Get rid of picture if correct
          $('#' + character + ' img').remove();
          //Blink to show result
          interval = setInterval(function(){blinkFound(character, 'found')}, 200);
          //Stop blinking while solid color
          setTimeout(makeItStop, 1200)
          //Romove selector panel after a slight delay
          setTimeout(selector, 1500)
        }

        //When character is misidentified
        var failed = function(character) {
          if ($('#' + character).attr('class') !== 'found') {
            //Blink to show result
            interval = setInterval(function(){blinkFound(character, 'wrong')}, 200);
            //Stop blinking while solid color
            setTimeout(makeItStop, 1000)
            //Romove selector panel after a slight delay
          }
          setTimeout(selector, 1300)
        }

          //Flash character selector buttons
            var blinkFound = function(character, result) {
              if ($('#' + character).attr('class') === result) {
                $('#' + character).removeClass(result);
              } else {
                $('#' + character).addClass(result);
              }
            }

          //Stop flashing
            var makeItStop = function(){
              clearInterval(interval);
            }

  //Revealing Module design pattern reveal
    return {
      initialize: initialize
    }

})();

$('document').ready(function(){
  wheresWaldo.initialize();
});